# This file acts as the project's changelog.

`Type-Tiny 0.000_01 cpan:TOBYINK`
	issued  2013-04-02;
	label   "Developer preview".

`Type-Tiny 0.000_02 cpan:TOBYINK`
	issued  2013-04-02;
	changeset [
		item "Beginnings of Type::Tiny::Manual."^^Documentation;
		item "Anchor enum regexps to beginning and end of string."^^Bugfix;
		item "StrMatch added to Type::Standard."^^Addition;
		item "use Type::Library -base"^^Addition;
		item "use Type::Library -declare"^^Addition;
	].

`Type-Tiny 0.000_03 cpan:TOBYINK`
	issued  2013-04-03;
	changeset [
		item "Document Type::Coercion's overloading."^^Documentation;
		item "Create and use compiled type constraint checks; much faster!"^^Change;
		item "Inlined type constraints for all of Type::Standard."^^Addition;
		item "Test cases for ScalarRef[`a]."^^Addition;
		item "Fix the crashing t/moo-inflation.t test case."^^Bugfix;
		item "Use more unique stringification for %Moo::HandleMoose::TYPE_MAP keys."^^Change;
		item "Make sure Type::Standard's Moose-like built-ins get inflated to real Moose built-in types."^^Change;
	].

`Type-Tiny 0.000_04 cpan:TOBYINK`
	issued  2013-04-03;
	changeset [
		item "Create and use compiled coercions; somewhat faster."^^Change;
		item "Type::Tiny plus_coercions/minus_coercions/no_coercions methods for creating subtypes with different sets of coercions."^^Addition;
		item "Type::Tiny equals/is_subtype_of/is_supertype_of/is_a_type_of methods for type constraint comparisons."^^Addition;
		item "Finally implement Type::Coercion's has_coercion_for_type method."^^Addition;
		item "Allow coercion code to be expressed as a string; quite a bit faster."^^Change;
	].

`Type-Tiny 0.000_05 cpan:TOBYINK`
	issued  2013-04-04;
	changeset [
		item "Factor out some functions from test suite into a new module: Test::TypeTiny."^^Addition;
		item "Rearrange test suite slightly."^^Packaging;
		item "Rename Type::Standard module to Types::Standard."^^Change;
		item "Types::TypeTiny bootstrapping library now takes care of vaious internal type checking requirements."^^Change;
		item "Sanity checks for type constraint names."^^Change;
		item "Fix is_parameterized."^^Bugfix;
		item "Allow null type constraints with no parent type (e.g. 'Any' in Types::Standard) to be inlined."^^Change;
		item "Don't die with full stack trace."^^Change;
		item "Get Mouse coercions working."^^Bugfix;
	].

`Type-Tiny 0.000_06 cpan:TOBYINK`
	issued  2013-04-05;
	changeset [
		item "Monkey patch Moose::Meta::TypeConstraint to be able to retrieve Type::Tiny constraints from inflated Moose constraints."^^Addition;
		item "More test cases."^^Packaging;
		item "Improved documentation of parameterization attributes."^^Documentation;
		item "Footprint reduction: Type::Tiny, Type::Library and Type::Coerce no longer automatically load Types::Standard and Type::Utils."^^Change;
		item "Footprint reduction: Type::Tiny and Type::Coercion no longer use if.pm."^^Change;
		item "Footprint reduction: Type::Tiny no longer triggers Perl to load its Unicode tables (unless you create a type constraint with a non-ASCII type name)."^^Change;
		item "In Moo, type assertions and coercions are now inlined."^^Addition;
		item "Type::Tiny now has an 'inline_assert' function."^^Addition;
		item "Using Type::Tiny with Moo added to manual."^^Documentation;
		item "Section in manual comparing Type::Tiny with various other type library frameworks."^^Documentation;
	].

`Type-Tiny 0.000_07 cpan:TOBYINK`
	issued  2013-04-06;
	changeset [
		item "More test cases."^^Packaging;
		item "Document constructor for Type::Tiny::Class."^^Documentation;
		item "Fix inlining for Type::Tiny::Intersection."^^Bugfix;
		item "Types within libraries, if accessed directly rather than exported, did not accept parameters."^^Bugfix;
		item "Type::Coercion::Union - automatically handles coercion to union types."^^Addition;
		item "Fix inlining of certain conditionals into coercion code."^^Bugfix;
	].

`Type-Tiny 0.000_08 cpan:TOBYINK`
	issued  2013-04-07;
	changeset [
		item "Rewrite most of the functions exported by Type::Library-based type libraries to cope better with being used mid-list."^^Change;
		item "Most parts of the API that accept Type::Tiny objects (e.g. Type::Utils::from()) now also accept Moose::Meta::TypeConstraint objects."^^Change;
		item "Types::TypeTiny::to_TypeTiny can be used to coerce a Moose type constraint object to Type::Tiny."^^Addition;
	].

`Type-Tiny 0.000_09 cpan:TOBYINK`
	issued  2013-04-08;
	changeset [
		item "Bundle benchmarking scripts."^^Addition;
		item "Tidy up the 'examples' directory."^^Packaging;
		item "When generating Moose/Mouse constraints from Type::Tiny objects, prefer to generate anonymous ones."^^Packaging;
		item "Fill in the Usage with Moose section of the fine manual."^^Documentation;
	].

`Type-Tiny 0.000_10 cpan:TOBYINK`
	issued  2013-04-09;
	changeset [
		item "Improvements to has_coercion_for_{type,value} from Type::Coercion."^^Change;
		item "Fix incorrect Test::Requires line in 'mouse-coercion.t'."^^Bugfix;
	].
